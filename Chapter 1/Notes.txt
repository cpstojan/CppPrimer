Chapter 1 Notes

Introduction to the Book:
-the primary goal of the new standards of C++ (C++11) are to increase uniformity, make the standard library easier, safer and more efficient, and to make it easier to write efficient abstractions
-new features include auto, smart ptrs, and move-enabled containers

Writing a Simple C++ Program:
function - named unit of computation
main - function called by the operating system to execute a C++ program, each program must have one and only one function named main
-a function definition has four elements: return type, function name, parameter list and function body
-the value returned by main is a status indicator, usually a value of 0 indicates success, non zero has meaning define by the system (type of error)
-a type defines both the contents of a data element and the operations that are possible on that data
-the data our programs manipulate are stored in variables and every variable has a type
source file - term used to describe a file that contains a C++ program
-to obtain the status on Unix systems use the command echo $? 
-on Unix executables have no suffic (on Windows suffix is .exe)
-options can be added to the GNU compiler an example is -Wall which generates warnings about problematic constructs
-to create an executable on GNU g++ -c prog1 prog1.cc
-then to run the created executable (assuming permissions) ./prog1

A First Look at Input/Output:
-in the standard library input/output is commonly done in the iostream, specifically istream and ostream
-a stream is a sequence of characters read from or written from an IO device
-the library defines four IO objects
	1) to handle input we use an object of type istream named cin
	2) for output an object of type ostream named coutt is used
	3) for standard error type ostream; cerr
	4) for general information type ostream; clog
-every program that uses a library facility must include its associated header
-an expression yields a result and is composed of one or more operands and (usually) an operator
-the output operator is << it takes two operands; the left-hand operand must be an ostream object, the right-hand operand is a value to print
-because the operator returns its left-hand operand, we can chain together output requests
string literal - sequence of zero or more characters enclosed in double quotes
manipulator - object, such as std::endl that when read or written "manipulates" the stream itself
-reading cin flushes the cout buffer, endl also flushes the buffer
-flushing the buffers ensures that all the ouput the program has generated so far is actually written to the output stream, rather than sitting in memory
-when writing print statements to debug always flush the stream, otherwise if the program crashes output may be left in the buffer hiding the true crash site
-writing std::cout uses the scope operator to say that we want to use the name cout that is defined in the namespace std
initialize - give an object a value at the same time that it is created (defined)
-the input operator is >> it behaves analogously to the output operator (istream on its left, object on its right) returning its left-hand operand to continue the chain while storing the value in the object

A Word About Comments
-comments come in two forms single line and multiline, multiline comments /* */ do not nest
-these types of comments are inherited from C
-for multiline comments it is sometimes advantageous to start each line with an asteriks to easily show the line is commented out

Flow of Control
-a while statement executes 'while' something is true
-a condition is an expression that yields a result that is either true or false
-the operator += adds the right-hand operand to the left-hand operand and stores the result in the left-hand operand
-a while executes by testing the condition then executing the associated statement until the condition is false
-a block is a sequence of zero or more statements enclosed by curly brackets

-each for statement has two parts a header and a body, the header controls how often the body is executed
-the header has trhee parts: an initialization statement, a condition, and an expression
-for loops are advantageous when there is a definite amount of iterations, while should be used if indefinite
